public class Solution {
    public int findPeakElement(int[] num) {
        int len = num.length;  
        if (len == 1)  
            return 0;  
        if (num[0] > num[1])             //最左  
            return 0;  
        if (num[len - 1] > num[len - 2]) //最右  
            return len - 1;  
        int i = 1;  
        for (; i < len - 1; i++) {  
            if (num[i] > num[i - 1] && num[i] > num[i + 1])  
                break;  
        }  
        return i;  
     }  
}

//way with binary search

public class Solution {
    public int findPeakElement(int[] num) {
        int len = num.length;  
        if (len == 1)  
            return 0;  
        if (num[0] > num[1])             
            return 0;  
        if (num[len - 1] > num[len - 2]) 
            return len - 1;  
        int start = 1, end = num.length-2; // 1.答案在之间，2.不会出界 
        while(start + 1 <  end) {
            int mid = (start + end) / 2;
            if(num[mid] < num[mid - 1]) {
                end = mid;
            } else if(num[mid] < num[mid + 1]) {
                start = mid;
            } else {
                end = mid;
            }
        }
        if(num[start] < num[end]) {
            return end;
        } else { 
            return start;
        }
     }  
}
