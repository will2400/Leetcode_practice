import java.util.Hashtable;
public class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        
        int [] temp = new int[nums1.length];
        int index = 0;
        int i = 0;
        int j = 0;
        while(i < nums1.length && j < nums2.length ){
            if (nums1[i] == nums2[j]){
                if (index == 0 || temp[index-1] != nums1[i]){
                    temp[index++] = nums1[i];
                }
                i++;
                j++;
            }else if (nums1[i] < nums2[j]){
                i++;
            }else {
                j++;
            }
        }
        int[] result = new int[index];
        for (int k = 0; k < index; k++) {
            result[k] = temp[k];
        }    
                
    	Hashtable<Integer, Integer> h1 = new Hashtable<Integer, Integer>(); 
    	for(int m:nums1){
    		h1.put(m, h1.containsKey(m)? h1.get(m) + 1 : 1);
    	}
    	System.out.println(h1);
    	Hashtable<Integer, Integer> h2 = new Hashtable<Integer, Integer>(); 
    	for(int n:nums2){
    		h2.put(n, h2.containsKey(n)? h2.get(n) + 1 : 1);
    	}
    	System.out.println(h2);
    	ArrayList<Integer> res = new ArrayList<>();
    	for(int a = 0; a < result.length; a++){
    			for(int q= 0; q < Math.min(h1.get(result[a]),h2.get(result[a]));q++){
    				res.add(result[a]);
    			}
    		
    	}
    	int p = 0;
    	int [] ress = new int[res.size()];
    	for(int num : res){
    		ress[p] = num;
    		p++;
    	}
    	return ress;
        
    }
}
