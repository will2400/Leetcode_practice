//Let dp[v] to be the minimum number of coins required to get the amount v.
//In this problem we must use dp[j-coin], if you uese dp[i+coin] will be out of bound;
public class Solution {
    public int coinChange(int[] coins, int amount) {
        if(amount == 0){
            return 0;
        }
        
        int[] dp = new int[amount + 1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        
        for (int coin : coins) {
            for (int j = coin; j <= amount; j++) {
                if (dp[j - coin] != Integer.MAX_VALUE) {
                    dp[j] = Math.min(dp[j], dp[j - coin] + 1);
                }
            }
        }
        
        if(dp[amount] >= Integer.MAX_VALUE){
            return -1;
        }
        
        return dp[amount];
    }
}
