public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        if(root == null){
            return res;
        }
        
        Stack<TreeNode> currlevel = new Stack<TreeNode>();
        Stack<TreeNode> nextlevel = new Stack<TreeNode>();
        Stack<TreeNode> tmp = new Stack<TreeNode>();
        
        currlevel.push(root);
        boolean normalorder = true;
        
        while(!currlevel.isEmpty()){
            List<Integer> curr_res  = new ArrayList<Integer>();
            
            while(!currlevel.isEmpty()){
                TreeNode head = currlevel.pop();
                curr_res.add(head.val);
                
                if(normalorder){
                    if(head.left != null){
                        nextlevel.push(head.left);
                    }
                    if(head.right != null){
                        nextlevel.push(head.right);
                    }
                }else{
                    if(head.right != null){
                        nextlevel.push(head.right);
                    }
                    if(head.left != null){
                        nextlevel.push(head.left);
                    }
                }
            }
            res.add(curr_res);
            tmp = currlevel;
            currlevel = nextlevel;
            nextlevel = tmp;
            normalorder = !normalorder;
        }
        return res;
    }
}
