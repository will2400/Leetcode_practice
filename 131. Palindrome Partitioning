public class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res = new ArrayList<List<String>>();
        if(s == null || s.length() == 0){
            return res;
        }
        
        List<String> path  = new ArrayList<String>();
        helper(s, path, 0, res);
        return res;
    }
    
    private boolean isPd(String s){
        int start = 0;
        int end = s.length() -1;
        while(start < end){
            if(s.charAt(start) != s.charAt(end)){
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
    
    private void helper(String s, List<String> path, int index, List<List<String>> res){
        if(index == s.length()){
            res.add(new ArrayList<String>(path));
            return;
        }
        
        for(int i = index; i<s.length(); i++){
            String prefix = s.substring(index, i+1);
            if(!isPd(prefix)){
                continue;
            }
            
            path.add(prefix);
            helper(s, path, i+1, res);
            path.remove(path.size()-1);
            
        }
    }
}
