public class Solution {
    public List<String> removeInvalidParentheses(String s) {
        List<String> res = new ArrayList<>();
        if(s == null){
            return res;
        }
        
        Queue<String> queue = new LinkedList<>();
        Set<String> visited = new HashSet<>();
        queue.offer(s);
        boolean foundRes = false;
        
        while(!queue.isEmpty()){
            s = queue.poll();
            if(isValid(s)){
                res.add(s);
                foundRes = true;
            }
            
            if(foundRes){
                continue;
            }
            for(int i=0; i<s.length(); i++){
                char c = s.charAt(i);
                if(c =='(' || c == ')'){
                    String tmp = s.substring(0,i)+s.substring(i+1);
                    if(!visited.contains(tmp)){
                        queue.offer(tmp);
                        visited.add(tmp);
                        
                    }
                }
            }
        }
        return res;
    }
    
    private boolean isValid(String s){
        int count =0;
        for(int i=0; i<s.length(); i++){
            char c = s.charAt(i);
            if(c == '('){
                count++;
            }else if(c == ')'){
                count--;
            }
            if(count < 0){
                return false;
            }
        }
        return count == 0;
    }
}
