public class Solution {
    public boolean exist(char[][] board, String word) {
        if(board == null || board.length == 0 || board[0].length == 0){
            return false;
        }
        if(word == null || word.length() == 0){
            return true;
        }
        
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(board[i][j] == word.charAt(0)){
                    boolean res = helper(board, i, j, word, 0);
                    if(res){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    
    private boolean helper(char[][] board, int i, int j, String word, int start){
        if(start == word.length()){
            return true;
        }
        
        if(i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] != word.charAt(start)){
            return false;
        }
        //prevent to retake character has already been chosen 
        board[i][j] = '#';
        boolean res = helper(board, i-1, j, word, start + 1) || helper(board, i, j-1, word, start + 1) || helper(board, i + 1, j, word, start + 1) || helper(board, i, j + 1, word, start + 1);
        board[i][j] = word.charAt(start);
        return res;
    }
}
