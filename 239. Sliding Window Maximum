public class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if(nums == null || nums.length ==0 || k>nums.length){
            return new int[0];
        }
        
        int[] res = new int[nums.length-k+1];
        LinkedList<Integer> deque = new LinkedList<Integer>();
        for(int i=0; i<nums.length; i++){
            if(!deque.isEmpty() && deque.peekFirst() ==i-k){
                deque.poll();
            }
            
            while(!deque.isEmpty() && nums[deque.peekLast()]<nums[i]){
                deque.removeLast();
            }
            
            deque.offer(i);
            
            if(i+1>=k){
                res[i-k+1] = nums[deque.peek()];
            }
        }
        return res;
    }
}
