public class Solution {
    public boolean wordPattern(String pattern, String str) {
        String[] arr = str.split(" ");
        
        if(pattern.length() != arr.length){
            System.out.print("111");
            return false;
        }
        int len = arr.length;
        HashMap<Character, String> map = new HashMap<Character, String>();
        
        for(int i=0; i<len; i++){
            char c = pattern.charAt(i);
            if(map.containsKey(c)){
                String value = map.get(c);
                //Here we cant use map.get(c) != arr[i], I think because of the type
                if(!value.equals(arr[i])){
                    return false;
                }
            }else{
                if(map.containsValue(arr[i])){

                    return false;
                }
            }
            map.put(c, arr[i]);
        }
        return true;
    }
}
