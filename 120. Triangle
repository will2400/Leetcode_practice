public class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        if(triangle == null || triangle.size() == 0){
            return -1;
        }
        if(triangle.get(0) == null || triangle.get(0).size()==0){
            return -1;
        }
        int n =triangle.size();
        int[][] dp = new int[n][n];
        
        dp[0][0] = triangle.get(0).get(0);
        
        for(int i=1; i<n; i++){
            dp[i][0] = dp[i-1][0]+triangle.get(i).get(0);
            dp[i][i] = dp[i-1][i-1] + triangle.get(i).get(i);
        }
        
        for(int i =2; i<n; i++){
            for(int j=1; j<i; j++){
                dp[i][j] = Math.min(dp[i-1][j-1]+triangle.get(i).get(j), dp[i-1][j]+triangle.get(i).get(j));
            }
        }
        int best = dp[n-1][0];
        for(int i=0; i<n;i++){
            best = Math.min(best, dp[n-1][i]);
        }
        return best;
    }
}
